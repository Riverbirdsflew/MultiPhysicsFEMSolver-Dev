//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    @{KRATOS_APP_AUTHOR}
//

#pragma once
#if !defined(KRATOS_CONCENTRATION_DIFUSSION_APPLICATION_VARIABLES_H_INCLUDED)
#define KRATOS_CONCENTRATION_DIFUSSION_APPLICATION_VARIABLES_H_INCLUDED

// System includes

// External includes

// Project includes
#include "includes/define.h"
#include "containers/variable.h"
#include "includes/global_pointer_variables.h"

namespace Kratos
{
KRATOS_DEFINE_VARIABLE( double, POINT_CONCENTRATION_SOURCE )
KRATOS_DEFINE_VARIABLE( double, AMBIENT_CONCENTRATION )
KRATOS_DEFINE_VARIABLE( double, FACE_CONCENTRATION_FLUX )
KRATOS_DEFINE_VARIABLE( double, CONCENTRATION_FLUX )

KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( CONCENTRATION_DIFFUSION_APPLICATION, CONCENTRATION_GRADIENT)
KRATOS_DEFINE_APPLICATION_VARIABLE( CONCENTRATION_DIFFUSION_APPLICATION, double, AMBIENT_CONCENTRATION )

KRATOS_DEFINE_VARIABLE( double, PHASE_TRANSITION_FRACTION )
KRATOS_DEFINE_VARIABLE( double, PHASE_NAME )

KRATOS_DEFINE_3D_APPLICATION_VARIABLE_WITH_COMPONENTS( CONCENTRATION_DIFFUSION_APPLICATION, CONVECTION_VELOCITY)
KRATOS_DEFINE_APPLICATION_VARIABLE( CONCENTRATION_DIFFUSION_APPLICATION, double, PROJECTED_SCALAR1)
KRATOS_DEFINE_APPLICATION_VARIABLE( CONCENTRATION_DIFFUSION_APPLICATION, double, TRANSFER_COEFFICIENT)




}

#endif /* KRATOS_CONCENTRATION_DIFUSSION_APPLICATION_VARIABLES_H_INCLUDED */
