-- No KRATOS_SOURCE_DIR is defined, using: /home/whf/KratosDev/Kratos-Release/Kratos-10.1
-- No KRATOS_BINARY_DIR is defined, using: /home/whf/KratosDev/Kratos-Release/Kratos-10.1/build/Release
-- No KRATOS_INSTALL_PYTHON_USING_LINKS is defined, setting to OFF
-- No CMAKE_INSTALL_MESSAGE is defined. Setting to NEVER
EPETRA_INCLUDE_PATH: /usr/include/trilinos
EPETRA_LIBRARY: /usr/lib/x86_64-linux-gnu/libtrilinos_epetra.so
TEUCHOS_INCLUDE_PATH: /usr/include/trilinos
TEUCHOS_LIBRARIES: /usr/lib/x86_64-linux-gnu/libtrilinos_teuchoscomm.so/usr/lib/x86_64-linux-gnu/libtrilinos_teuchoscore.so/usr/lib/x86_64-linux-gnu/libtrilinos_teuchosnumerics.so/usr/lib/x86_64-linux-gnu/libtrilinos_teuchosparameterlist.so/usr/lib/x86_64-linux-gnu/libtrilinos_teuchosremainder.so

-- CMAKE_BUILD_TYPE ........ Release

WARNING: YOUR GIDPOST IS BEING COMPILED  WITHOUT DEBUG (ALL ASSERTS WILL BE AVOIDED)
**** configuring Kratos to be compiled with MPI-Support ****
	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/LinearSolversApplication'
**** configuring KratosLinearSolversApplication ****
	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/FluidDynamicsApplication'
**** configuring KratosFluidDynamicsApplication ****
-- [Info] Adding dependency TrilinosApplication
**** Configuring KratosTrilinosApplication ****
**** WARNING: Manually disabled Amesos2-Solver ****
	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/ConstitutiveLawsSmallStrainApplication'
**** configuring KratosConstitutiveLawsSmallStrainApplication ****
-- [Info] Adding dependency StructuralAnalysisApplication
**** configuring KratosStructuralAnalysisApplication ****
CMake Warning at CMakeLists.txt:640 (message):
  [Warning] Application
  '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/TrilinosApplication'
  was already added


	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/MetisApplication'
**** configuring KratosMetisApplication ****
	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/ConcentrationDiffusionApplication'
**** configuring KratosConcentrationDiffusionApplication ****
	Adding application '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/ThermalConductionApplication'
**** configuring KratosThermalConductionApplication ****
CMake Warning at CMakeLists.txt:640 (message):
  [Warning] Application
  '/home/whf/KratosDev/Kratos-Release/Kratos-10.1/scripts/../applications/StructuralAnalysisApplication'
  was already added



***********************************************************************

        LIST OF APPLICATIONS THAT ARE GOING TO BE COMPILED:

        LinearSolversApplication
        FluidDynamicsApplication
        ConstitutiveLawsSmallStrainApplication
        TrilinosApplication
        MetisApplication
        ConcentrationDiffusionApplication
        ThermalConductionApplication
        StructuralAnalysisApplication

        APPLICATIONS ADDED TO COMPILATION THROUGH DEPENDENCIES:


***********************************************************************


List of upcoming API-breaking and behavior changes:
	 Geometry 'Dimension' removed: https://github.com/KratosMultiphysics/Kratos/pull/10977
	 Geometry old projection methods deprecation: https://github.com/KratosMultiphysics/Kratos/pull/9024
	 Geometry old closest point methods deprecation: https://github.com/KratosMultiphysics/Kratos/pull/9243
	 Model 'CreateModelPart' behavior change (no error thrown if model part exists): https://github.com/KratosMultiphysics/Kratos/pull/9598
	 Make GetIntegrationMethod method of Condition const: https://github.com/KratosMultiphysics/Kratos/pull/9769
	 Behavior change of ModelPart.GetProperties (MeshIndex removed): https://github.com/KratosMultiphysics/Kratos/pull/9774
	 Behavior change of Testing. Please ensure you use KRATOS_EXPECT for testing instead of KRATOS_CHECK
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp: In constructor ‘Kratos::ModelPartIO::ModelPartIO(const std::filesystem::__cxx11::path&, Kratos::Flags)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp:65:60: warning: ‘static int Kratos::Timer::SetOuputFile(const std::string&)’ is deprecated: Please use SetOutputFile instead. Will be removed eventually [-Wdeprecated-declarations]
   65 |     if (mOptions.IsNot(IO::SKIP_TIMER)) Timer::SetOuputFile(time_file_name.string());
      |                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp:25:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/timer.h:205:16: note: declared here
  205 |     static int SetOuputFile(std::string const& rOutputFileName);
      |                ^~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp: In destructor ‘virtual Kratos::ModelPartIO::~ModelPartIO()’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp:84:62: warning: ‘static int Kratos::Timer::CloseOuputFile()’ is deprecated: Please use CloseOutputFile instead. Will be removed eventually [-Wdeprecated-declarations]
   84 |     if (mOptions.IsNot(IO::SKIP_TIMER)) Timer::CloseOuputFile();
      |                                         ~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/timer.h:212:16: note: declared here
  212 |     static int CloseOuputFile();
      |                ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp: In member function ‘void Kratos::ModelPartIO::ReadNodesBlock(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp:1870:36: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
 1870 |     OpenMPUtils::DivideInPartitions(nnodes, nthreads, partition);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/sources/model_part_io.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/factories/standard_linear_solver_factory.cpp:26:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/factories/standard_linear_solver_factory.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/factories/standard_linear_solver_factory.cpp:20:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::GetScalingWeights(const SparseMatrixType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:222:26:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:26:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::SymmetricScaling(SparseMatrixType&, const VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:235:29:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::GetScalingWeights(const SparseMatrixType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:222:26:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::SymmetricScaling(SparseMatrixType&, const VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:235:29:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver_impl.cpp:21:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/expression_types.hpp:16,
                 from /usr/include/boost/numeric/ublas/vector_expression.hpp:16,
                 from /usr/include/boost/numeric/ublas/vector.hpp:22,
                 from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/serializer.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.h:20,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:19:
In static member function ‘static boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::result_type boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::apply(const boost::numeric::ublas::vector_expression<E>&, const boost::numeric::ublas::vector_expression<E2>&) [with E1 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; E2 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; V1 = Kratos::array_1d<double, 3>; V2 = Kratos::array_1d<double, 3>; TV = double]’,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::value_type boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::evaluate(boost::numeric::ublas::dense_random_access_iterator_tag) const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1689:40,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::operator value_type() const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1680:29,
    inlined from ‘typename boost::numeric::ublas::vector_scalar_binary_traits<E1, E2, boost::numeric::ublas::vector_inner_prod<E1, E2, typename boost::numeric::ublas::promote_traits<typename E1::value_type, typename E2::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod(const vector_expression<E>&, const vector_expression<E2>&) [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1744:16,
    inlined from ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:184:45:
/usr/include/boost/numeric/ublas/functional.hpp:741:32: warning: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[2]’ may be used uninitialized [-Wmaybe-uninitialized]
  741 |                 t += e1 () (i) * e2 () (i);
      |                      ~~~~~~~~~~^~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp: In member function ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:180:28: note: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[2]’ was declared here
  180 |         array_1d<double,3> unit_dist;
      |                            ^~~~~~~~~
In static member function ‘static boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::result_type boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::apply(const boost::numeric::ublas::vector_expression<E>&, const boost::numeric::ublas::vector_expression<E2>&) [with E1 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; E2 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; V1 = Kratos::array_1d<double, 3>; V2 = Kratos::array_1d<double, 3>; TV = double]’,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::value_type boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::evaluate(boost::numeric::ublas::dense_random_access_iterator_tag) const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1689:40,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::operator value_type() const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1680:29,
    inlined from ‘typename boost::numeric::ublas::vector_scalar_binary_traits<E1, E2, boost::numeric::ublas::vector_inner_prod<E1, E2, typename boost::numeric::ublas::promote_traits<typename E1::value_type, typename E2::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod(const vector_expression<E>&, const vector_expression<E2>&) [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1744:16,
    inlined from ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:184:45:
/usr/include/boost/numeric/ublas/functional.hpp:741:32: warning: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[1]’ may be used uninitialized [-Wmaybe-uninitialized]
  741 |                 t += e1 () (i) * e2 () (i);
      |                      ~~~~~~~~~~^~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp: In member function ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:180:28: note: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[1]’ was declared here
  180 |         array_1d<double,3> unit_dist;
      |                            ^~~~~~~~~
In static member function ‘static boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::result_type boost::numeric::ublas::vector_inner_prod<V1, V2, TV>::apply(const boost::numeric::ublas::vector_expression<E>&, const boost::numeric::ublas::vector_expression<E2>&) [with E1 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; E2 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 3> >; V1 = Kratos::array_1d<double, 3>; V2 = Kratos::array_1d<double, 3>; TV = double]’,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::value_type boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::evaluate(boost::numeric::ublas::dense_random_access_iterator_tag) const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1689:40,
    inlined from ‘boost::numeric::ublas::vector_scalar_binary<E1, E2, F>::operator value_type() const [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>; F = boost::numeric::ublas::vector_inner_prod<Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1680:29,
    inlined from ‘typename boost::numeric::ublas::vector_scalar_binary_traits<E1, E2, boost::numeric::ublas::vector_inner_prod<E1, E2, typename boost::numeric::ublas::promote_traits<typename E1::value_type, typename E2::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod(const vector_expression<E>&, const vector_expression<E2>&) [with E1 = Kratos::array_1d<double, 3>; E2 = Kratos::array_1d<double, 3>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:1744:16,
    inlined from ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:184:45:
/usr/include/boost/numeric/ublas/functional.hpp:741:32: warning: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[0]’ may be used uninitialized [-Wmaybe-uninitialized]
  741 |                 t += e1 () (i) * e2 () (i);
      |                      ~~~~~~~~~~^~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp: In member function ‘void Kratos::FindContactsInSkinModelPart::GetClosestContactColorFromNeighbours(const std::vector<int>&, const std::vector<int>&, const std::vector<Kratos::array_1d<long unsigned int, 3> >&, const Kratos::array_1d<double, 3>&, const Kratos::array_1d<double, 3>&, const Kratos::VoxelMesherOperation::CartesianMeshColors&, int&, double&, int&) const’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/modeler/operation/find_contacts_in_skin_model_part.cpp:180:28: note: ‘*(const double (*)[3])((char*)&unit_dist + offsetof(Kratos::array_1d<double, 3>,Kratos::array_1d<double, 3>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 3> >::<unnamed>))[0]’ was declared here
  180 |         array_1d<double,3> unit_dist;
      |                            ^~~~~~~~~
In file included from /usr/include/c++/12/string:50,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp:15:
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 6; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 6, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<> >&; long unsigned int _Idx = 2; _Head = boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<> >]’ at /usr/include/c++/12/tuple:200:4,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<> >&; long unsigned int _Idx = 2; _Head = boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<> >]’ at /usr/include/c++/12/tuple:441:38,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head, _Tail ...>::_Tuple_impl(_UHead&&, _UTail&& ...) [with _UHead = Kratos::array_1d<double, 3>&; _UTail = {boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; <template-parameter-2-3> = void; long unsigned int _Idx = 1; _Head = Kratos::array_1d<double, 3>; _Tail = {boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:292:38,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head, _Tail ...>::_Tuple_impl(_UHead&&, _UTail&& ...) [with _UHead = Kratos::array_1d<double, 3>&; _UTail = {Kratos::array_1d<double, 3>&, boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; <template-parameter-2-3> = void; long unsigned int _Idx = 0; _Head = Kratos::array_1d<double, 3>; _Tail = {Kratos::array_1d<double, 3>, boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:292:38,
    inlined from ‘constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {Kratos::array_1d<double, 3>&, Kratos::array_1d<double, 3>&, boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; bool _Valid = true; typename std::enable_if<_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {Kratos::array_1d<double, 3>, Kratos::array_1d<double, 3>, boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:744:54,
    inlined from ‘constexpr std::tuple<typename std::__strip_reference_wrapper<typename std::decay<_Elements>::type>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {Kratos::array_1d<double, 3>&, Kratos::array_1d<double, 3>&, boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}]’ at /usr/include/c++/12/tuple:1581:62,
    inlined from ‘void Kratos::ParallelDistanceCalculationProcess<TDim>::ExtendDistancesByLayer() [with unsigned int TDim = 2]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp:395:13:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[48])((char*)&DN_DX + offsetof(boost::numeric::ublas::BoundedMatrix<double, 3, 2>,boost::numeric::ublas::bounded_matrix<double, 3, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 6, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 6, std::allocator<double> >::data_[0]))’ is used uninitialized [-Wuninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp: In member function ‘void Kratos::ParallelDistanceCalculationProcess<TDim>::ExtendDistancesByLayer() [with unsigned int TDim = 2]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp:393:41: note: ‘DN_DX’ declared here
  393 |     BoundedMatrix <double, TDim+1,TDim> DN_DX;
      |                                         ^~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 12; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 12, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 4; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<> >&; long unsigned int _Idx = 2; _Head = boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<> >]’ at /usr/include/c++/12/tuple:200:4,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<> >&; long unsigned int _Idx = 2; _Head = boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<> >]’ at /usr/include/c++/12/tuple:441:38,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head, _Tail ...>::_Tuple_impl(_UHead&&, _UTail&& ...) [with _UHead = Kratos::array_1d<double, 4>&; _UTail = {boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; <template-parameter-2-3> = void; long unsigned int _Idx = 1; _Head = Kratos::array_1d<double, 4>; _Tail = {boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:292:38,
    inlined from ‘constexpr std::_Tuple_impl<_Idx, _Head, _Tail ...>::_Tuple_impl(_UHead&&, _UTail&& ...) [with _UHead = Kratos::array_1d<double, 4>&; _UTail = {Kratos::array_1d<double, 4>&, boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; <template-parameter-2-3> = void; long unsigned int _Idx = 0; _Head = Kratos::array_1d<double, 4>; _Tail = {Kratos::array_1d<double, 4>, boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:292:38,
    inlined from ‘constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {Kratos::array_1d<double, 4>&, Kratos::array_1d<double, 4>&, boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}; bool _Valid = true; typename std::enable_if<_TCC<_Valid>::__is_implicitly_constructible<_UElements ...>(), bool>::type <anonymous> = true; _Elements = {Kratos::array_1d<double, 4>, Kratos::array_1d<double, 4>, boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >}]’ at /usr/include/c++/12/tuple:744:54,
    inlined from ‘constexpr std::tuple<typename std::__strip_reference_wrapper<typename std::decay<_Elements>::type>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {Kratos::array_1d<double, 4>&, Kratos::array_1d<double, 4>&, boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >&}]’ at /usr/include/c++/12/tuple:1581:62,
    inlined from ‘void Kratos::ParallelDistanceCalculationProcess<TDim>::ExtendDistancesByLayer() [with unsigned int TDim = 3]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp:395:13:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[96])((char*)&DN_DX + offsetof(boost::numeric::ublas::BoundedMatrix<double, 4, 3>,boost::numeric::ublas::bounded_matrix<double, 4, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 12, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 12, std::allocator<double> >::data_[0]))’ is used uninitialized [-Wuninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp: In member function ‘void Kratos::ParallelDistanceCalculationProcess<TDim>::ExtendDistancesByLayer() [with unsigned int TDim = 3]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/parallel_distance_calculation_process.cpp:393:41: note: ‘DN_DX’ declared here
  393 |     BoundedMatrix <double, TDim+1,TDim> DN_DX;
      |                                         ^~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/factories/standard_linear_solver_factory.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/LinearSolversApplication/custom_solvers/eigen_direct_solver.h:20,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/LinearSolversApplication/linear_solvers_application.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::GetScalingWeights(const SparseMatrixType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:222:26:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:26:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::SymmetricScaling(SparseMatrixType&, const VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:235:29:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TDenseSpaceType = Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > >, Kratos::UblasSpace<std::complex<double>, boost::numeric::ublas::matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >, boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > > > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<std::complex<double>, boost::numeric::ublas::basic_row_major<>, 0, boost::numeric::ublas::unbounded_array<long unsigned int>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >; VectorType = boost::numeric::ublas::vector<std::complex<double>, boost::numeric::ublas::unbounded_array<std::complex<double>, std::allocator<std::complex<double> > > >]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::GetScalingWeights(const SparseMatrixType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:222:26:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::SymmetricScaling(SparseMatrixType&, const VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:235:29:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_amgcl_solver_to_python.cpp:23:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/12/vector:64,
                 from /usr/include/c++/12/functional:62,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/intrusive_ptr/intrusive_ptr.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/smart_pointers.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/define.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/parallel_environment.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:19:
In member function ‘void std::vector<_Tp, _Alloc>::resize(size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 9>; _Alloc = std::allocator<Kratos::array_1d<double, 9> >]’,
    inlined from ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 9> >]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:934:27:
/usr/include/c++/12/bits/stl_vector.h:1032:25: warning: ‘temp’ may be used uninitialized [-Wmaybe-uninitialized]
 1032 |           _M_fill_insert(end(), __new_size - size(), __x);
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/12/vector:70:
/usr/include/c++/12/bits/vector.tcc: In member function ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 9> >]’:
/usr/include/c++/12/bits/vector.tcc:523:5: note: by argument 4 of type ‘const std::vector<Kratos::array_1d<double, 9> >::value_type&’ {aka ‘const Kratos::array_1d<double, 9>&’} to ‘void std::vector<_Tp, _Alloc>::_M_fill_insert(iterator, size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 9>; _Alloc = std::allocator<Kratos::array_1d<double, 9> >]’ declared here
  523 |     vector<_Tp, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:905:19: note: ‘temp’ declared here
  905 |     sub_data_type temp{};
      |                   ^~~~
In member function ‘void std::vector<_Tp, _Alloc>::resize(size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 6>; _Alloc = std::allocator<Kratos::array_1d<double, 6> >]’,
    inlined from ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 6> >]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:934:27:
/usr/include/c++/12/bits/stl_vector.h:1032:25: warning: ‘temp’ may be used uninitialized [-Wmaybe-uninitialized]
 1032 |           _M_fill_insert(end(), __new_size - size(), __x);
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/12/bits/vector.tcc: In member function ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 6> >]’:
/usr/include/c++/12/bits/vector.tcc:523:5: note: by argument 4 of type ‘const std::vector<Kratos::array_1d<double, 6> >::value_type&’ {aka ‘const Kratos::array_1d<double, 6>&’} to ‘void std::vector<_Tp, _Alloc>::_M_fill_insert(iterator, size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 6>; _Alloc = std::allocator<Kratos::array_1d<double, 6> >]’ declared here
  523 |     vector<_Tp, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:905:19: note: ‘temp’ declared here
  905 |     sub_data_type temp{};
      |                   ^~~~
In member function ‘void std::vector<_Tp, _Alloc>::resize(size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 4>; _Alloc = std::allocator<Kratos::array_1d<double, 4> >]’,
    inlined from ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 4> >]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:934:27:
/usr/include/c++/12/bits/stl_vector.h:1032:25: warning: ‘temp’ may be used uninitialized [-Wmaybe-uninitialized]
 1032 |           _M_fill_insert(end(), __new_size - size(), __x);
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/12/bits/vector.tcc: In member function ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 4> >]’:
/usr/include/c++/12/bits/vector.tcc:523:5: note: by argument 4 of type ‘const std::vector<Kratos::array_1d<double, 4> >::value_type&’ {aka ‘const Kratos::array_1d<double, 4>&’} to ‘void std::vector<_Tp, _Alloc>::_M_fill_insert(iterator, size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 4>; _Alloc = std::allocator<Kratos::array_1d<double, 4> >]’ declared here
  523 |     vector<_Tp, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:905:19: note: ‘temp’ declared here
  905 |     sub_data_type temp{};
      |                   ^~~~
In member function ‘void std::vector<_Tp, _Alloc>::resize(size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 3>; _Alloc = std::allocator<Kratos::array_1d<double, 3> >]’,
    inlined from ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 3> >]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:934:27:
/usr/include/c++/12/bits/stl_vector.h:1032:25: warning: ‘temp’ may be used uninitialized [-Wmaybe-uninitialized]
 1032 |           _M_fill_insert(end(), __new_size - size(), __x);
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/12/bits/vector.tcc: In member function ‘void Kratos::MPIDataCommunicator::RecvDetail(TDataType&, int, int) const [with TDataType = std::vector<Kratos::array_1d<double, 3> >]’:
/usr/include/c++/12/bits/vector.tcc:523:5: note: by argument 4 of type ‘const std::vector<Kratos::array_1d<double, 3> >::value_type&’ {aka ‘const Kratos::array_1d<double, 3>&’} to ‘void std::vector<_Tp, _Alloc>::_M_fill_insert(iterator, size_type, const value_type&) [with _Tp = Kratos::array_1d<double, 3>; _Alloc = std::allocator<Kratos::array_1d<double, 3> >]’ declared here
  523 |     vector<_Tp, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/sources/mpi_data_communicator.cpp:905:19: note: ‘temp’ declared here
  905 |     sub_data_type temp{};
      |                   ^~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/distributed_model_part_initializer.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/fill_communicator.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/distributed_model_part_initializer.cpp:22:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/gather_modelpart_utility.cpp:24:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/gather_modelpart_utility.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/gather_modelpart_utility.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.cpp:22:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/fill_communicator.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.cpp:19:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.cpp: In constructor ‘Kratos::ParallelFillCommunicator::ParallelFillCommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/parallel_fill_communicator.cpp:28:34: warning: ‘Kratos::FillCommunicator::FillCommunicator(Kratos::ModelPart&)’ is deprecated: This constructor is deprecated, please use the one that accepts a DataCommunicator [-Wdeprecated-declarations]
   28 |     : FillCommunicator(rModelPart)
      |                                  ^
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/fill_communicator.h:80:5: note: declared here
   80 |     FillCommunicator(ModelPart& rModelPart);
      |     ^~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/MetisApplication/custom_python/add_processes_to_python.cpp:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/MetisApplication/custom_processes/morton_divide_input_to_partitions_process.h: In member function ‘virtual void Kratos::MortonDivideInputToPartitionsProcess::Execute()’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/MetisApplication/custom_processes/morton_divide_input_to_partitions_process.h:162:37: warning: ‘virtual void Kratos::IO::DivideInputToPartitions(SizeType, const GraphType&, const PartitionIndicesType&, const PartitionIndicesType&, const PartitionIndicesType&, const PartitionIndicesContainerType&, const PartitionIndicesContainerType&, const PartitionIndicesContainerType&)’ is deprecated: 'This version of "DivideInputToPartitions" is deprecated, please use the interface that accepts a "PartitioningInfo" [-Wdeprecated-declarations]
  162 |         mrIO.DivideInputToPartitions(mNumberOfPartitions, domains_colored_graph,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |                                      io_nodes_partitions, io_elements_partitions, io_conditions_partitions,
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |                                      nodes_all_partitions, elements_all_partitions, conditions_all_partitions);
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/MetisApplication/custom_processes/metis_divide_heterogeneous_input_process.h:7,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/MetisApplication/custom_python/add_processes_to_python.cpp:25:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/io.h:512:18: note: declared here
  512 |     virtual void DivideInputToPartitions(SizeType NumberOfPartitions,
      |                  ^~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In instantiation of ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 2; unsigned int TNumNodes = 3]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:454:16:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:284:24: warning: unused variable ‘density_m3’ [-Wunused-variable]
  284 |                 double density_m3 = my_settings->GetDensityM3Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:285:24: warning: unused variable ‘density_m4’ [-Wunused-variable]
  285 |                 double density_m4 = my_settings->GetDensityM4Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:286:24: warning: unused variable ‘density_m5’ [-Wunused-variable]
  286 |                 double density_m5 = my_settings->GetDensityM5Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:287:24: warning: unused variable ‘density_m6’ [-Wunused-variable]
  287 |                 double density_m6 = my_settings->GetDensityM6Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:288:24: warning: unused variable ‘density_m7’ [-Wunused-variable]
  288 |                 double density_m7 = my_settings->GetDensityM7Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In instantiation of ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 2; unsigned int TNumNodes = 4]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:455:16:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:284:24: warning: unused variable ‘density_m3’ [-Wunused-variable]
  284 |                 double density_m3 = my_settings->GetDensityM3Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:285:24: warning: unused variable ‘density_m4’ [-Wunused-variable]
  285 |                 double density_m4 = my_settings->GetDensityM4Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:286:24: warning: unused variable ‘density_m5’ [-Wunused-variable]
  286 |                 double density_m5 = my_settings->GetDensityM5Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:287:24: warning: unused variable ‘density_m6’ [-Wunused-variable]
  287 |                 double density_m6 = my_settings->GetDensityM6Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:288:24: warning: unused variable ‘density_m7’ [-Wunused-variable]
  288 |                 double density_m7 = my_settings->GetDensityM7Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In instantiation of ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 3; unsigned int TNumNodes = 4]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:456:16:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:284:24: warning: unused variable ‘density_m3’ [-Wunused-variable]
  284 |                 double density_m3 = my_settings->GetDensityM3Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:285:24: warning: unused variable ‘density_m4’ [-Wunused-variable]
  285 |                 double density_m4 = my_settings->GetDensityM4Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:286:24: warning: unused variable ‘density_m5’ [-Wunused-variable]
  286 |                 double density_m5 = my_settings->GetDensityM5Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:287:24: warning: unused variable ‘density_m6’ [-Wunused-variable]
  287 |                 double density_m6 = my_settings->GetDensityM6Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:288:24: warning: unused variable ‘density_m7’ [-Wunused-variable]
  288 |                 double density_m7 = my_settings->GetDensityM7Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In instantiation of ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 3; unsigned int TNumNodes = 8]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:457:16:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:284:24: warning: unused variable ‘density_m3’ [-Wunused-variable]
  284 |                 double density_m3 = my_settings->GetDensityM3Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:285:24: warning: unused variable ‘density_m4’ [-Wunused-variable]
  285 |                 double density_m4 = my_settings->GetDensityM4Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:286:24: warning: unused variable ‘density_m5’ [-Wunused-variable]
  286 |                 double density_m5 = my_settings->GetDensityM5Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:287:24: warning: unused variable ‘density_m6’ [-Wunused-variable]
  287 |                 double density_m6 = my_settings->GetDensityM6Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:288:24: warning: unused variable ‘density_m7’ [-Wunused-variable]
  288 |                 double density_m7 = my_settings->GetDensityM7Variable();
      |                        ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In member function ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 2; unsigned int TNumNodes = 3]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:397:37: warning: ‘conductivity_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  397 |                 conductivity_m7_sum += (conductivity_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:388:24: note: ‘conductivity_m7_sum’ was declared here
  388 |                 double conductivity_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:396:37: warning: ‘conductivity_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  396 |                 conductivity_m6_sum += (conductivity_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:387:24: note: ‘conductivity_m6_sum’ was declared here
  387 |                 double conductivity_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:395:37: warning: ‘conductivity_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  395 |                 conductivity_m5_sum += (conductivity_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:386:24: note: ‘conductivity_m5_sum’ was declared here
  386 |                 double conductivity_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:394:37: warning: ‘conductivity_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  394 |                 conductivity_m4_sum += (conductivity_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:385:24: note: ‘conductivity_m4_sum’ was declared here
  385 |                 double conductivity_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:393:37: warning: ‘conductivity_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  393 |                 conductivity_m3_sum += (conductivity_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:384:24: note: ‘conductivity_m3_sum’ was declared here
  384 |                 double conductivity_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:392:37: warning: ‘conductivity_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  392 |                 conductivity_m2_sum += (conductivity_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:383:24: note: ‘conductivity_m2_sum’ was declared here
  383 |                 double conductivity_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:391:37: warning: ‘conductivity_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  391 |                 conductivity_m1_sum += (conductivity_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:382:24: note: ‘conductivity_m1_sum’ was declared here
  382 |                 double conductivity_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:355:38: warning: ‘specific_heat_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  355 |                 specific_heat_m7_sum += (specific_heat_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:346:24: note: ‘specific_heat_m7_sum’ was declared here
  346 |                 double specific_heat_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:354:38: warning: ‘specific_heat_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  354 |                 specific_heat_m6_sum += (specific_heat_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:345:24: note: ‘specific_heat_m6_sum’ was declared here
  345 |                 double specific_heat_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:353:38: warning: ‘specific_heat_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  353 |                 specific_heat_m5_sum += (specific_heat_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:344:24: note: ‘specific_heat_m5_sum’ was declared here
  344 |                 double specific_heat_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:352:38: warning: ‘specific_heat_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  352 |                 specific_heat_m4_sum += (specific_heat_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:343:24: note: ‘specific_heat_m4_sum’ was declared here
  343 |                 double specific_heat_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:351:38: warning: ‘specific_heat_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  351 |                 specific_heat_m3_sum += (specific_heat_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:342:24: note: ‘specific_heat_m3_sum’ was declared here
  342 |                 double specific_heat_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:350:38: warning: ‘specific_heat_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  350 |                 specific_heat_m2_sum += (specific_heat_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:341:24: note: ‘specific_heat_m2_sum’ was declared here
  341 |                 double specific_heat_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:349:38: warning: ‘specific_heat_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  349 |                 specific_heat_m1_sum += (specific_heat_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:340:24: note: ‘specific_heat_m1_sum’ was declared here
  340 |                 double specific_heat_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:314:32: warning: ‘density_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  314 |                 density_m7_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:305:24: note: ‘density_m7_sum’ was declared here
  305 |                 double density_m7_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:313:32: warning: ‘density_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  313 |                 density_m6_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:304:24: note: ‘density_m6_sum’ was declared here
  304 |                 double density_m6_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:312:32: warning: ‘density_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  312 |                 density_m5_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:303:24: note: ‘density_m5_sum’ was declared here
  303 |                 double density_m5_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:311:32: warning: ‘density_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  311 |                 density_m4_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:302:24: note: ‘density_m4_sum’ was declared here
  302 |                 double density_m4_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:310:32: warning: ‘density_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  310 |                 density_m3_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:301:24: note: ‘density_m3_sum’ was declared here
  301 |                 double density_m3_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:309:32: warning: ‘density_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  309 |                 density_m2_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:300:24: note: ‘density_m2_sum’ was declared here
  300 |                 double density_m2_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:308:32: warning: ‘density_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  308 |                 density_m1_sum += (density_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:299:24: note: ‘density_m1_sum’ was declared here
  299 |                 double density_m1_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In member function ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 2; unsigned int TNumNodes = 4]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:397:37: warning: ‘conductivity_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  397 |                 conductivity_m7_sum += (conductivity_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:388:24: note: ‘conductivity_m7_sum’ was declared here
  388 |                 double conductivity_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:396:37: warning: ‘conductivity_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  396 |                 conductivity_m6_sum += (conductivity_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:387:24: note: ‘conductivity_m6_sum’ was declared here
  387 |                 double conductivity_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:395:37: warning: ‘conductivity_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  395 |                 conductivity_m5_sum += (conductivity_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:386:24: note: ‘conductivity_m5_sum’ was declared here
  386 |                 double conductivity_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:394:37: warning: ‘conductivity_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  394 |                 conductivity_m4_sum += (conductivity_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:385:24: note: ‘conductivity_m4_sum’ was declared here
  385 |                 double conductivity_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:393:37: warning: ‘conductivity_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  393 |                 conductivity_m3_sum += (conductivity_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:384:24: note: ‘conductivity_m3_sum’ was declared here
  384 |                 double conductivity_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:392:37: warning: ‘conductivity_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  392 |                 conductivity_m2_sum += (conductivity_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:383:24: note: ‘conductivity_m2_sum’ was declared here
  383 |                 double conductivity_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:391:37: warning: ‘conductivity_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  391 |                 conductivity_m1_sum += (conductivity_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:382:24: note: ‘conductivity_m1_sum’ was declared here
  382 |                 double conductivity_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:355:38: warning: ‘specific_heat_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  355 |                 specific_heat_m7_sum += (specific_heat_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:346:24: note: ‘specific_heat_m7_sum’ was declared here
  346 |                 double specific_heat_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:354:38: warning: ‘specific_heat_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  354 |                 specific_heat_m6_sum += (specific_heat_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:345:24: note: ‘specific_heat_m6_sum’ was declared here
  345 |                 double specific_heat_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:353:38: warning: ‘specific_heat_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  353 |                 specific_heat_m5_sum += (specific_heat_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:344:24: note: ‘specific_heat_m5_sum’ was declared here
  344 |                 double specific_heat_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:352:38: warning: ‘specific_heat_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  352 |                 specific_heat_m4_sum += (specific_heat_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:343:24: note: ‘specific_heat_m4_sum’ was declared here
  343 |                 double specific_heat_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:351:38: warning: ‘specific_heat_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  351 |                 specific_heat_m3_sum += (specific_heat_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:342:24: note: ‘specific_heat_m3_sum’ was declared here
  342 |                 double specific_heat_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:350:38: warning: ‘specific_heat_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  350 |                 specific_heat_m2_sum += (specific_heat_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:341:24: note: ‘specific_heat_m2_sum’ was declared here
  341 |                 double specific_heat_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:349:38: warning: ‘specific_heat_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  349 |                 specific_heat_m1_sum += (specific_heat_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:340:24: note: ‘specific_heat_m1_sum’ was declared here
  340 |                 double specific_heat_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:314:32: warning: ‘density_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  314 |                 density_m7_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:305:24: note: ‘density_m7_sum’ was declared here
  305 |                 double density_m7_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:313:32: warning: ‘density_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  313 |                 density_m6_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:304:24: note: ‘density_m6_sum’ was declared here
  304 |                 double density_m6_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:312:32: warning: ‘density_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  312 |                 density_m5_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:303:24: note: ‘density_m5_sum’ was declared here
  303 |                 double density_m5_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:311:32: warning: ‘density_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  311 |                 density_m4_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:302:24: note: ‘density_m4_sum’ was declared here
  302 |                 double density_m4_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:310:32: warning: ‘density_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  310 |                 density_m3_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:301:24: note: ‘density_m3_sum’ was declared here
  301 |                 double density_m3_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:309:32: warning: ‘density_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  309 |                 density_m2_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:300:24: note: ‘density_m2_sum’ was declared here
  300 |                 double density_m2_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:308:32: warning: ‘density_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  308 |                 density_m1_sum += (density_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:299:24: note: ‘density_m1_sum’ was declared here
  299 |                 double density_m1_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In member function ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 3; unsigned int TNumNodes = 4]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:397:37: warning: ‘conductivity_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  397 |                 conductivity_m7_sum += (conductivity_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:388:24: note: ‘conductivity_m7_sum’ was declared here
  388 |                 double conductivity_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:396:37: warning: ‘conductivity_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  396 |                 conductivity_m6_sum += (conductivity_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:387:24: note: ‘conductivity_m6_sum’ was declared here
  387 |                 double conductivity_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:395:37: warning: ‘conductivity_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  395 |                 conductivity_m5_sum += (conductivity_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:386:24: note: ‘conductivity_m5_sum’ was declared here
  386 |                 double conductivity_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:394:37: warning: ‘conductivity_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  394 |                 conductivity_m4_sum += (conductivity_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:385:24: note: ‘conductivity_m4_sum’ was declared here
  385 |                 double conductivity_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:393:37: warning: ‘conductivity_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  393 |                 conductivity_m3_sum += (conductivity_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:384:24: note: ‘conductivity_m3_sum’ was declared here
  384 |                 double conductivity_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:392:37: warning: ‘conductivity_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  392 |                 conductivity_m2_sum += (conductivity_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:383:24: note: ‘conductivity_m2_sum’ was declared here
  383 |                 double conductivity_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:391:37: warning: ‘conductivity_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  391 |                 conductivity_m1_sum += (conductivity_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:382:24: note: ‘conductivity_m1_sum’ was declared here
  382 |                 double conductivity_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:355:38: warning: ‘specific_heat_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  355 |                 specific_heat_m7_sum += (specific_heat_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:346:24: note: ‘specific_heat_m7_sum’ was declared here
  346 |                 double specific_heat_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:354:38: warning: ‘specific_heat_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  354 |                 specific_heat_m6_sum += (specific_heat_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:345:24: note: ‘specific_heat_m6_sum’ was declared here
  345 |                 double specific_heat_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:353:38: warning: ‘specific_heat_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  353 |                 specific_heat_m5_sum += (specific_heat_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:344:24: note: ‘specific_heat_m5_sum’ was declared here
  344 |                 double specific_heat_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:352:38: warning: ‘specific_heat_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  352 |                 specific_heat_m4_sum += (specific_heat_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:343:24: note: ‘specific_heat_m4_sum’ was declared here
  343 |                 double specific_heat_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:351:38: warning: ‘specific_heat_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  351 |                 specific_heat_m3_sum += (specific_heat_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:342:24: note: ‘specific_heat_m3_sum’ was declared here
  342 |                 double specific_heat_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:350:38: warning: ‘specific_heat_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  350 |                 specific_heat_m2_sum += (specific_heat_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:341:24: note: ‘specific_heat_m2_sum’ was declared here
  341 |                 double specific_heat_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:349:38: warning: ‘specific_heat_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  349 |                 specific_heat_m1_sum += (specific_heat_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:340:24: note: ‘specific_heat_m1_sum’ was declared here
  340 |                 double specific_heat_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:314:32: warning: ‘density_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  314 |                 density_m7_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:305:24: note: ‘density_m7_sum’ was declared here
  305 |                 double density_m7_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:313:32: warning: ‘density_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  313 |                 density_m6_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:304:24: note: ‘density_m6_sum’ was declared here
  304 |                 double density_m6_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:312:32: warning: ‘density_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  312 |                 density_m5_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:303:24: note: ‘density_m5_sum’ was declared here
  303 |                 double density_m5_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:311:32: warning: ‘density_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  311 |                 density_m4_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:302:24: note: ‘density_m4_sum’ was declared here
  302 |                 double density_m4_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:310:32: warning: ‘density_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  310 |                 density_m3_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:301:24: note: ‘density_m3_sum’ was declared here
  301 |                 double density_m3_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:309:32: warning: ‘density_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  309 |                 density_m2_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:300:24: note: ‘density_m2_sum’ was declared here
  300 |                 double density_m2_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:308:32: warning: ‘density_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  308 |                 density_m1_sum += (density_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:299:24: note: ‘density_m1_sum’ was declared here
  299 |                 double density_m1_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp: In member function ‘void Kratos::EulerianThermalConductionElement<TDim, TNumNodes>::GetNodalValues(ElementVariables&, const Kratos::ProcessInfo&) const [with unsigned int TDim = 3; unsigned int TNumNodes = 8]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:397:37: warning: ‘conductivity_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  397 |                 conductivity_m7_sum += (conductivity_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:388:24: note: ‘conductivity_m7_sum’ was declared here
  388 |                 double conductivity_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:396:37: warning: ‘conductivity_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  396 |                 conductivity_m6_sum += (conductivity_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:387:24: note: ‘conductivity_m6_sum’ was declared here
  387 |                 double conductivity_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:395:37: warning: ‘conductivity_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  395 |                 conductivity_m5_sum += (conductivity_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:386:24: note: ‘conductivity_m5_sum’ was declared here
  386 |                 double conductivity_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:394:37: warning: ‘conductivity_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  394 |                 conductivity_m4_sum += (conductivity_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:385:24: note: ‘conductivity_m4_sum’ was declared here
  385 |                 double conductivity_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:393:37: warning: ‘conductivity_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  393 |                 conductivity_m3_sum += (conductivity_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:384:24: note: ‘conductivity_m3_sum’ was declared here
  384 |                 double conductivity_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:392:37: warning: ‘conductivity_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  392 |                 conductivity_m2_sum += (conductivity_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:383:24: note: ‘conductivity_m2_sum’ was declared here
  383 |                 double conductivity_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:391:37: warning: ‘conductivity_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  391 |                 conductivity_m1_sum += (conductivity_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:382:24: note: ‘conductivity_m1_sum’ was declared here
  382 |                 double conductivity_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:355:38: warning: ‘specific_heat_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  355 |                 specific_heat_m7_sum += (specific_heat_m7*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:346:24: note: ‘specific_heat_m7_sum’ was declared here
  346 |                 double specific_heat_m7_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:354:38: warning: ‘specific_heat_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  354 |                 specific_heat_m6_sum += (specific_heat_m6*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:345:24: note: ‘specific_heat_m6_sum’ was declared here
  345 |                 double specific_heat_m6_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:353:38: warning: ‘specific_heat_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  353 |                 specific_heat_m5_sum += (specific_heat_m5*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:344:24: note: ‘specific_heat_m5_sum’ was declared here
  344 |                 double specific_heat_m5_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:352:38: warning: ‘specific_heat_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  352 |                 specific_heat_m4_sum += (specific_heat_m4*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:343:24: note: ‘specific_heat_m4_sum’ was declared here
  343 |                 double specific_heat_m4_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:351:38: warning: ‘specific_heat_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  351 |                 specific_heat_m3_sum += (specific_heat_m3*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:342:24: note: ‘specific_heat_m3_sum’ was declared here
  342 |                 double specific_heat_m3_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:350:38: warning: ‘specific_heat_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  350 |                 specific_heat_m2_sum += (specific_heat_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:341:24: note: ‘specific_heat_m2_sum’ was declared here
  341 |                 double specific_heat_m2_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:349:38: warning: ‘specific_heat_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  349 |                 specific_heat_m1_sum += (specific_heat_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:340:24: note: ‘specific_heat_m1_sum’ was declared here
  340 |                 double specific_heat_m1_sum;
      |                        ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:314:32: warning: ‘density_m7_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  314 |                 density_m7_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM7Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:305:24: note: ‘density_m7_sum’ was declared here
  305 |                 double density_m7_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:313:32: warning: ‘density_m6_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  313 |                 density_m6_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM6Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:304:24: note: ‘density_m6_sum’ was declared here
  304 |                 double density_m6_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:312:32: warning: ‘density_m5_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  312 |                 density_m5_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM5Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:303:24: note: ‘density_m5_sum’ was declared here
  303 |                 double density_m5_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:311:32: warning: ‘density_m4_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  311 |                 density_m4_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM4Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:302:24: note: ‘density_m4_sum’ was declared here
  302 |                 double density_m4_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:310:32: warning: ‘density_m3_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  310 |                 density_m3_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM3Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:301:24: note: ‘density_m3_sum’ was declared here
  301 |                 double density_m3_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:309:32: warning: ‘density_m2_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  309 |                 density_m2_sum += (density_m2*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM2Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:300:24: note: ‘density_m2_sum’ was declared here
  300 |                 double density_m2_sum;
      |                        ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:308:32: warning: ‘density_m1_sum’ may be used uninitialized [-Wmaybe-uninitialized]
  308 |                 density_m1_sum += (density_m1*GetGeometry()[i].FastGetSolutionStepValue(rMassFractionM1Var));
      |                 ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_elements/eulerian_therm_cond.cpp:299:24: note: ‘density_m1_sum’ was declared here
  299 |                 double density_m1_sum;
      |                        ^~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/test_utilities/mpi_cpp_test_utilities.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/line_2d_2.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/test_utilities/mpi_cpp_test_utilities.cpp:18:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp: In member function ‘virtual void Kratos::BaseSolidElement::InitializeSolutionStep(const Kratos::ProcessInfo&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp:138:73: warning: ‘virtual void Kratos::ConstitutiveLaw::InitializeSolutionStep(const Kratos::Properties&, const GeometryType&, const Kratos::Vector&, const Kratos::ProcessInfo&)’ is deprecated: Please do not use this method - Use InitializeMaterialResponse instead" [-Wdeprecated-declarations]
  138 |             mConstitutiveLawVector[point_number]->InitializeSolutionStep( r_properties, r_geom, row( N_values, point_number ), rCurrentProcessInfo);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/element.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp:24:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/constitutive_law.h:1017:18: note: declared here
 1017 |     virtual void InitializeSolutionStep(const Properties& rMaterialProperties,
      |                  ^~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp: In member function ‘virtual void Kratos::BaseSolidElement::InitializeNonLinearIteration(const Kratos::ProcessInfo&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp:153:75: warning: ‘virtual void Kratos::ConstitutiveLaw::InitializeNonLinearIteration(const Kratos::Properties&, const GeometryType&, const Kratos::Vector&, const Kratos::ProcessInfo&)’ is deprecated: Please do not use this method - There is no equivalent for this" [-Wdeprecated-declarations]
  153 |         mConstitutiveLawVector[point_number]->InitializeNonLinearIteration( r_properties, r_geometry, row( N_values, point_number ), rCurrentProcessInfo);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/constitutive_law.h:1047:18: note: declared here
 1047 |     virtual void InitializeNonLinearIteration(const Properties& rMaterialProperties,
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp: In member function ‘virtual void Kratos::BaseSolidElement::FinalizeNonLinearIteration(const Kratos::ProcessInfo&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp:167:73: warning: ‘virtual void Kratos::ConstitutiveLaw::FinalizeNonLinearIteration(const Kratos::Properties&, const GeometryType&, const Kratos::Vector&, const Kratos::ProcessInfo&)’ is deprecated: Please do not use this method - There is no equivalent for this" [-Wdeprecated-declarations]
  167 |         mConstitutiveLawVector[point_number]->FinalizeNonLinearIteration( r_properties, r_geometry, row( N_values, point_number ), rCurrentProcessInfo);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/constitutive_law.h:1063:18: note: declared here
 1063 |     virtual void FinalizeNonLinearIteration(const Properties& rMaterialProperties,
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp: In member function ‘virtual void Kratos::BaseSolidElement::FinalizeSolutionStep(const Kratos::ProcessInfo&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/custom_elements/base_solid_element.cpp:228:71: warning: ‘virtual void Kratos::ConstitutiveLaw::FinalizeSolutionStep(const Kratos::Properties&, const GeometryType&, const Kratos::Vector&, const Kratos::ProcessInfo&)’ is deprecated: Please do not use this method - Use FinalizeMaterialResponse instead" [-Wdeprecated-declarations]
  228 |             mConstitutiveLawVector[point_number]->FinalizeSolutionStep( r_properties, r_geometry, row( N_values, point_number ), rCurrentProcessInfo);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/constitutive_law.h:1031:18: note: declared here
 1031 |     virtual void FinalizeSolutionStep(const Properties& rMaterialProperties,
      |                  ^~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/test_utilities/mpi_test_environment.cpp:24:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/testing/testing.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/test_utilities/mpi_test_environment.cpp:19:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/python/add_mpi_communicator_to_python.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/external_includes/amgcl_mpi_solver.h:32,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/custom_factories/trilinos_linear_solver_factory.cpp:35:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/python/add_mpi_utilities_to_python.cpp:22:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/parallel_environment.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/python/add_mpi_utilities_to_python.cpp:20:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ConcentrationDiffusionApplication/custom_python/add_custom_utilities_to_python.cpp: In function ‘void Kratos::Python::AddCustomUtilitiesToPython(pybind11::module&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ConcentrationDiffusionApplication/custom_python/add_custom_utilities_to_python.cpp:63:60: warning: typedef ‘LinearSolverType’ locally defined but not used [-Wunused-local-typedefs]
   63 |     typedef LinearSolver<SparseSpaceType, LocalSpaceType > LinearSolverType;
      |                                                            ^~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/python/kratos_mpi_python.cpp:19:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_python/add_custom_utilities_to_python.cpp: In function ‘void Kratos::Python::AddCustomUtilitiesToPython(pybind11::module&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/ThermalConductionApplication/custom_python/add_custom_utilities_to_python.cpp:56:60: warning: typedef ‘LinearSolverType’ locally defined but not used [-Wunused-local-typedefs]
   56 |     typedef LinearSolver<SparseSpaceType, LocalSpaceType > LinearSolverType;
      |                                                            ^~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/builder_and_solvers/test_builder_and_solver.cpp:29:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/accessor.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/properties.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/element.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_application.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/trilinos_application.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/trilinos_fast_suite.h:15,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/builder_and_solvers/test_builder_and_solver.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/external_includes/amgcl_mpi_solver.h:32,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/builder_and_solvers/test_builder_and_solver.cpp:38:
/usr/include/boost/bind.hpp: At global scope:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/containers/test_distributed_sparse_graph.cpp: In instantiation of ‘std::vector<_RealType> Kratos::Testing::DistTestingInternals::ComputeBounds(TIndexType, TIndexType, TIndexType) [with TIndexType = long unsigned int]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/containers/test_distributed_sparse_graph.cpp:295:92:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/containers/test_distributed_sparse_graph.cpp:278:36: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  278 |     OpenMPUtils::DivideInPartitions(N,Ndivisions,partition);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/containers/test_distributed_sparse_graph.cpp:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/containers/test_distributed_sparse_graph.cpp:278:36: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  278 |     OpenMPUtils::DivideInPartitions(N,Ndivisions,partition);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/structural_analysis_application.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/structural_analysis_application.h: In constructor ‘Kratos::KratosStructuralAnalysisApplication::KratosStructuralAnalysisApplication()’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/structural_analysis_application.h:238:57: warning: ‘Kratos::KratosStructuralAnalysisApplication::mSmallDisplacementMixedVolumetricStrainElement3D8N’ will be initialized after [-Wreorder]
  238 |     const SmallDisplacementMixedVolumetricStrainElement mSmallDisplacementMixedVolumetricStrainElement3D8N;
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/structural_analysis_application.h:229:35: warning:   ‘const Kratos::AxisymSmallDisplacement Kratos::KratosStructuralAnalysisApplication::mAxisymSmallDisplacement2D3N’ [-Wreorder]
  229 |     const AxisymSmallDisplacement mAxisymSmallDisplacement2D3N;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/StructuralAnalysisApplication/structural_analysis_application.cpp:64:1: warning:   when initialized here [-Wreorder]
   64 | KratosStructuralAnalysisApplication::KratosStructuralAnalysisApplication():
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/custom_utilities/trilinos_cutting_app.h:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/custom_python/add_custom_utilities_to_python.cpp:26:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/linear_solver.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/custom_python/add_custom_utilities_to_python.cpp:18:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/convergence_criteria/test_trilinos_displacement_criteria.cpp:27:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/accessor.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/properties.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/element.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_application.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/trilinos_application.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/trilinos_fast_suite.h:15,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/convergence_criteria/test_trilinos_displacement_criteria.cpp:22:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_linear_solvers_to_python.cpp:33:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::GetScalingWeights(const SparseMatrixType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:222:26:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:26:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:432:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  432 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h: In instantiation of ‘static void Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::SymmetricScaling(SparseMatrixType&, const VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:235:29:   required from ‘bool Kratos::ScalingSolver<TSparseSpaceType, TDenseSpaceType, TReordererType>::Solve(SparseMatrixType&, VectorType&, VectorType&) [with TSparseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >; TDenseSpaceType = Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> >; TReordererType = Kratos::Reorderer<Kratos::UblasSpace<double, boost::numeric::ublas::compressed_matrix<double>, boost::numeric::ublas::vector<double> >, Kratos::UblasSpace<double, boost::numeric::ublas::matrix<double>, boost::numeric::ublas::vector<double> > >; SparseMatrixType = boost::numeric::ublas::compressed_matrix<double>; VectorType = boost::numeric::ublas::vector<double>]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:214:10:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/scaling_solver.h:368:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  368 |         OpenMPUtils::DivideInPartitions(A.size1(),number_of_threads,  partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/bind.hpp:30,
                 from /usr/include/boost/property_tree/json_parser/detail/parser.hpp:7,
                 from /usr/include/boost/property_tree/json_parser/detail/read.hpp:13,
                 from /usr/include/boost/property_tree/json_parser.hpp:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/linear_solvers/amgcl_solver.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/external_includes/amgcl_mpi_solver.h:32,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/custom_python/add_trilinos_linear_solvers_to_python.cpp:48:
/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
   36 | BOOST_PRAGMA_MESSAGE(
      | ^~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/sources/test_mpi_communicator.cpp:23:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/model.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/sources/test_mpi_communicator.cpp:20:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/convergence_criteria/test_trilinos_residual_criteria.cpp:26:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:31,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/accessor.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/properties.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/element.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_application.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/trilinos_application.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/trilinos_fast_suite.h:15,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/TrilinosApplication/tests/cpp_tests/strategies/convergence_criteria/test_trilinos_residual_criteria.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h: In static member function ‘static void Kratos::ModelPartCommunicatorUtilities::SetMPICommunicator(Kratos::ModelPart&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/utilities/model_part_communicator_utilities.h:88:123: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
   88 |         rThisModelPart.SetCommunicator(Kratos::make_shared<MPICommunicator>(p_variables_list, DataCommunicator::GetDefault()));
      |                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /usr/include/c++/12/string:50,
                 from /usr/include/c++/12/stdexcept:39,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/define.h:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:14:
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/serializer.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable_data.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:23:
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/alternative_d_vms_dem_coupled.cpp:227:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::AlternativeDVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp: In function ‘void Kratos::Python::AddOtherUtilitiesToPython(pybind11::module&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:251:45: warning: ‘static int Kratos::Timer::SetOuputFile(const std::string&)’ is deprecated: Please use SetOutputFile instead. Will be removed eventually [-Wdeprecated-declarations]
  251 |         .def_static("SetOuputFile", &Timer::SetOuputFile)
      |                                             ^~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:36:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/timer.h:205:16: note: declared here
  205 |     static int SetOuputFile(std::string const& rOutputFileName);
      |                ^~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:252:47: warning: ‘static int Kratos::Timer::CloseOuputFile()’ is deprecated: Please use CloseOutputFile instead. Will be removed eventually [-Wdeprecated-declarations]
  252 |         .def_static("CloseOuputFile", &Timer::CloseOuputFile)
      |                                               ^~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/timer.h:212:16: note: declared here
  212 |     static int CloseOuputFile();
      |                ^~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/pybind11.h:14,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/stl.h:12,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:15:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/detail/init.h: In instantiation of ‘Class* pybind11::detail::initimpl::construct_or_initialize(Args&& ...) [with Class = Kratos::SparseMatrixMultiplicationUtility; Args = {}; typename std::enable_if<(! std::is_constructible<_Tp, _Args>::value), int>::type <anonymous> = 0]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/detail/init.h:208:70:   required from ‘static void pybind11::detail::initimpl::constructor<Args>::execute(Class&, const Extra& ...) [with Class = pybind11::class_<Kratos::SparseMatrixMultiplicationUtility, std::shared_ptr<Kratos::SparseMatrixMultiplicationUtility> >; Extra = {}; typename std::enable_if<(! Class::has_alias), int>::type <anonymous> = 0; Args = {}]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/pybind11.h:1667:21:   required from ‘pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {}; Extra = {}; type_ = Kratos::SparseMatrixMultiplicationUtility; options = {std::shared_ptr<Kratos::SparseMatrixMultiplicationUtility>}]’
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:418:13:   required from here
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/external_libraries/pybind11/detail/init.h:82:12: error: use of deleted function ‘Kratos::SparseMatrixMultiplicationUtility::SparseMatrixMultiplicationUtility()’
   82 |     return new Class{std::forward<Args>(args)...};
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_other_utilities_to_python.cpp:38:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/sparse_matrix_multiplication_utility.h:88:5: note: declared here
   88 |     SparseMatrixMultiplicationUtility() = delete;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gmake[2]: *** [kratos/CMakeFiles/Kratos.dir/build.make:678：kratos/CMakeFiles/Kratos.dir/python/add_other_utilities_to_python.cpp.o] 错误 1
gmake[2]: *** 正在等待未完成的任务....
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_processes_to_python.cpp:40:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/calculate_embedded_signed_distance_to_3d_skin_process.h: In member function ‘void Kratos::CalculateEmbeddedSignedDistanceTo3DSkinProcess::SetMaximumAndMinimumDistanceValues(double&, double&)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/calculate_embedded_signed_distance_to_3d_skin_process.h:256:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  256 |         OpenMPUtils::DivideInPartitions(mrFluidModelPart.NumberOfNodes(), num_threads, nodes_partition);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/solving_strategies/schemes/scheme.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/solving_strategies/builder_and_solvers/builder_and_solver.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/solving_strategies/builder_and_solvers/residualbased_block_builder_and_solver.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/processes/calculate_embedded_nodal_variable_from_skin_process.h:32,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/python/add_processes_to_python.cpp:24:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/utilities/test_mpi_assign_unique_model_part_collection_tag_utility.cpp:25:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h: In constructor ‘Kratos::MPICommunicator::MPICommunicator(Kratos::VariablesList*)’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/includes/mpi_communicator.h:707:203: warning: ‘static Kratos::DataCommunicator& Kratos::DataCommunicator::GetDefault()’ is deprecated: This function is deprecated, please retrieve the DataCommunicator through the ModelPart (or by name in special cases) [-Wdeprecated-declarations]
  707 |     KRATOS_DEPRECATED_MESSAGE("This constructor is deprecated, please use the one that accepts a DataCommunicator") MPICommunicator(VariablesList* Variables_list) : BaseType(DataCommunicator::GetDefault()), mpVariables_list(Variables_list)
      |                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/kratos_components.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/data_value_container.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/process_info.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/model_part.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/model.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/mpi/tests/cpp_tests/utilities/test_mpi_assign_unique_model_part_collection_tag_utility.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:654:30: note: declared here
  654 |     static DataCommunicator& GetDefault();
      |                              ^~~~~~~~~~
In file included from /usr/include/c++/12/string:50,
                 from /usr/include/c++/12/stdexcept:39,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/define.h:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:14:
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/serializer.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable_data.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:23:
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
gmake[1]: *** [CMakeFiles/Makefile2:763：kratos/CMakeFiles/Kratos.dir/all] 错误 2
gmake[1]: *** 正在等待未完成的任务....
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/d_vms_dem_coupled.cpp:259:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::DVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In file included from /usr/include/c++/12/string:50,
                 from /usr/include/c++/12/stdexcept:39,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/define.h:16,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:13:
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/serializer.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable_data.h:33,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/variable.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/cfd_variables.h:23:
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 3>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 4>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 6>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 4; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 2; long unsigned int N = 2; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[32])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 2, 2, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 4, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<2, 9>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 8>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In static member function ‘static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = double; bool _IsMove = false]’,
    inlined from ‘_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:495:30,
    inlined from ‘_OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:522:42,
    inlined from ‘_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:529:31,
    inlined from ‘_OI std::copy(_II, _II, _OI) [with _II = const double*; _OI = double*]’ at /usr/include/c++/12/bits/stl_algobase.h:620:7,
    inlined from ‘boost::numeric::ublas::bounded_array<T, N, ALLOC>::bounded_array(const boost::numeric::ublas::bounded_array<T, N, ALLOC>&) [with T = double; long unsigned int N = 9; ALLOC = std::allocator<double>]’ at /usr/include/boost/numeric/ublas/storage.hpp:396:23,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(const boost::numeric::ublas::matrix<T, L, A>&) [with T = double; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:162:51,
    inlined from ‘boost::numeric::ublas::bounded_matrix<T, M, N, L>::bounded_matrix(const boost::numeric::ublas::bounded_matrix<T, M, N, L>&) [with T = double; long unsigned int M = 3; long unsigned int N = 3; L = boost::numeric::ublas::basic_row_major<>]’ at /usr/include/boost/numeric/ublas/matrix.hpp:2313:27,
    inlined from ‘void boost::numeric::ublas::unbounded_array<T, ALLOC>::resize(size_type, value_type) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; ALLOC = std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > >]’ at /usr/include/boost/numeric/ublas/storage.hpp:210:29,
    inlined from ‘void boost::numeric::ublas::vector<T, A>::resize(size_type, bool) [with T = boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >; A = boost::numeric::ublas::unbounded_array<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> >, std::allocator<boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<> > > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:189:30,
    inlined from ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/qs_vms_dem_coupled.cpp:218:40:
/usr/include/c++/12/bits/stl_algobase.h:431:30: warning: ‘*(unsigned char (*)[72])((char*)&<unnamed> + offsetof(boost::numeric::ublas::value_type, boost::numeric::ublas::bounded_matrix<double, 3, 3, boost::numeric::ublas::basic_row_major<long unsigned int, long int> >::<unnamed>.boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<long unsigned int, long int>, boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> > >::data_.boost::numeric::ublas::bounded_array<double, 9, std::allocator<double> >::data_[0]))’ may be used uninitialized [-Wmaybe-uninitialized]
  431 |             __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
      |             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/vector.hpp: In member function ‘void Kratos::QSVMSDEMCoupled<TElementData>::Initialize(const Kratos::ProcessInfo&) [with TElementData = Kratos::QSVMSDEMCoupledData<3, 27>]’:
/usr/include/boost/numeric/ublas/vector.hpp:189:56: note: ‘<anonymous>’ declared here
  189 |                      data ().resize (size, typename A::value_type ());
      |                                                        ^~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/expression_types.hpp:16,
                 from /usr/include/boost/numeric/ublas/vector_expression.hpp:16,
                 from /usr/include/boost/numeric/ublas/vector.hpp:22,
                 from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry_data.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/accessor.h:22,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/properties.h:26,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/element.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.h:21,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp:14:
In static member function ‘static boost::numeric::ublas::matrix_vector_prod1<M1, M2, TV>::result_type boost::numeric::ublas::matrix_vector_prod1<M1, M2, TV>::apply(const boost::numeric::ublas::matrix_expression<E1>&, const boost::numeric::ublas::vector_expression<E2>&, size_type) [with E1 = boost::numeric::ublas::matrix_reference<const boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > > >; E2 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 9> >; M1 = boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >; M2 = Kratos::array_1d<double, 9>; TV = double]’,
    inlined from ‘boost::numeric::ublas::matrix_vector_binary1<E1, E2, F>::const_reference boost::numeric::ublas::matrix_vector_binary1<E1, E2, F>::operator()(size_type) const [with E1 = boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >; E2 = Kratos::array_1d<double, 9>; F = boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double>]’ at /usr/include/boost/numeric/ublas/matrix_expression.hpp:4067:30,
    inlined from ‘void boost::numeric::ublas::indexing_vector_assign(V&, const vector_expression<E>&) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:265:46,
    inlined from ‘void boost::numeric::ublas::vector_assign(V&, const vector_expression<E>&, dense_proxy_tag) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:277:35,
    inlined from ‘void boost::numeric::ublas::vector_assign(V&, const vector_expression<E>&) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:487:26,
    inlined from ‘boost::numeric::ublas::vector<T, A>& boost::numeric::ublas::vector<T, A>::minus_assign(const boost::numeric::ublas::vector_expression<E>&) [with AE = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; T = double; A = boost::numeric::ublas::unbounded_array<double, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/vector.hpp:423:46,
    inlined from ‘boost::numeric::ublas::vector_reference<E>& boost::numeric::ublas::vector_reference<E>::minus_assign(const boost::numeric::ublas::vector_expression<E>&) [with AE = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; E = boost::numeric::ublas::vector<double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:140:40,
    inlined from ‘boost::numeric::ublas::noalias_proxy<C>::closure_type& boost::numeric::ublas::noalias_proxy<C>::operator-=(const E&) [with E = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; C = boost::numeric::ublas::vector<double>]’ at /usr/include/boost/numeric/ublas/detail/definitions.hpp:75:32,
    inlined from ‘void Kratos::TwoFluidNavierStokes<TElementData>::CalculateLocalSystem(MatrixType&, VectorType&, const Kratos::ProcessInfo&) [with TElementData = Kratos::TwoFluidNavierStokesData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp:220:51:
/usr/include/boost/numeric/ublas/functional.hpp:878:35: warning: ‘*(const double (*)[9])((char*)&tempU + offsetof(Kratos::array_1d<double, 9>,Kratos::array_1d<double, 9>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 9> >::<unnamed>))[8]’ may be used uninitialized [-Wmaybe-uninitialized]
  878 |                 t += e1 () (i, j) * e2 () (j);
      |                      ~~~~~~~~~~~~~^~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp: In member function ‘void Kratos::TwoFluidNavierStokes<TElementData>::CalculateLocalSystem(MatrixType&, VectorType&, const Kratos::ProcessInfo&) [with TElementData = Kratos::TwoFluidNavierStokesData<2, 3>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp:214:57: note: ‘tempU’ declared here
  214 |                     Kratos::array_1d<double, LocalSize> tempU; // Unknowns vector containing only velocity components
      |                                                         ^~~~~
In static member function ‘static boost::numeric::ublas::matrix_vector_prod1<M1, M2, TV>::result_type boost::numeric::ublas::matrix_vector_prod1<M1, M2, TV>::apply(const boost::numeric::ublas::matrix_expression<E1>&, const boost::numeric::ublas::vector_expression<E2>&, size_type) [with E1 = boost::numeric::ublas::matrix_reference<const boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > > >; E2 = boost::numeric::ublas::vector_reference<const Kratos::array_1d<double, 9> >; M1 = boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >; M2 = Kratos::array_1d<double, 9>; TV = double]’,
    inlined from ‘boost::numeric::ublas::matrix_vector_binary1<E1, E2, F>::const_reference boost::numeric::ublas::matrix_vector_binary1<E1, E2, F>::operator()(size_type) const [with E1 = boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >; E2 = Kratos::array_1d<double, 9>; F = boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double>]’ at /usr/include/boost/numeric/ublas/matrix_expression.hpp:4067:30,
    inlined from ‘void boost::numeric::ublas::indexing_vector_assign(V&, const vector_expression<E>&) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:265:46,
    inlined from ‘void boost::numeric::ublas::vector_assign(V&, const vector_expression<E>&, dense_proxy_tag) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:277:35,
    inlined from ‘void boost::numeric::ublas::vector_assign(V&, const vector_expression<E>&) [with F = scalar_minus_assign; V = vector<double>; E = matrix_vector_binary1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, matrix_vector_prod1<matrix<double, basic_row_major<>, bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >]’ at /usr/include/boost/numeric/ublas/detail/vector_assign.hpp:487:26,
    inlined from ‘boost::numeric::ublas::vector<T, A>& boost::numeric::ublas::vector<T, A>::minus_assign(const boost::numeric::ublas::vector_expression<E>&) [with AE = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; T = double; A = boost::numeric::ublas::unbounded_array<double, std::allocator<double> >]’ at /usr/include/boost/numeric/ublas/vector.hpp:423:46,
    inlined from ‘boost::numeric::ublas::vector_reference<E>& boost::numeric::ublas::vector_reference<E>::minus_assign(const boost::numeric::ublas::vector_expression<E>&) [with AE = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; E = boost::numeric::ublas::vector<double>]’ at /usr/include/boost/numeric/ublas/vector_expression.hpp:140:40,
    inlined from ‘boost::numeric::ublas::noalias_proxy<C>::closure_type& boost::numeric::ublas::noalias_proxy<C>::operator-=(const E&) [with E = boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<>, boost::numeric::ublas::bounded_array<double, 81, std::allocator<double> > >, Kratos::array_1d<double, 9>, double> >; C = boost::numeric::ublas::vector<double>]’ at /usr/include/boost/numeric/ublas/detail/definitions.hpp:75:32,
    inlined from ‘void Kratos::TwoFluidNavierStokes<TElementData>::CalculateLocalSystem(MatrixType&, VectorType&, const Kratos::ProcessInfo&) [with TElementData = Kratos::TwoFluidNavierStokesAlphaMethodData<2, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp:220:51:
/usr/include/boost/numeric/ublas/functional.hpp:878:35: warning: ‘*(const double (*)[9])((char*)&tempU + offsetof(Kratos::array_1d<double, 9>,Kratos::array_1d<double, 9>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<double, 9> >::<unnamed>))[8]’ may be used uninitialized [-Wmaybe-uninitialized]
  878 |                 t += e1 () (i, j) * e2 () (j);
      |                      ~~~~~~~~~~~~~^~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp: In member function ‘void Kratos::TwoFluidNavierStokes<TElementData>::CalculateLocalSystem(MatrixType&, VectorType&, const Kratos::ProcessInfo&) [with TElementData = Kratos::TwoFluidNavierStokesAlphaMethodData<2, 3>]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_elements/two_fluid_navier_stokes.cpp:214:57: note: ‘tempU’ declared here
  214 |                     Kratos::array_1d<double, LocalSize> tempU; // Unknowns vector containing only velocity components
      |                                                         ^~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_processes/distance_modification_process.cpp: In member function ‘void Kratos::DistanceModificationProcess::ModifyDistance()’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_processes/distance_modification_process.cpp:226:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  226 |         OpenMPUtils::DivideInPartitions(r_nodes.size(),num_chunks,partition_vec);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_processes/distance_modification_process.cpp:21:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_processes/distance_modification_process.cpp: In member function ‘void Kratos::DistanceModificationProcess::ModifyDiscontinuousDistance()’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/applications/FluidDynamicsApplication/custom_processes/distance_modification_process.cpp:345:40: warning: ‘static void Kratos::OpenMPUtils::DivideInPartitions(int, int, PartitionVector&)’ is deprecated: This is legacy, please use the "ParallelUtilities" instead [-Wdeprecated-declarations]
  345 |         OpenMPUtils::DivideInPartitions(n_elems,num_chunks,partition_vec);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/openmp_utils.h:158:24: note: declared here
  158 |     static inline void DivideInPartitions(
      |                        ^~~~~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/sources/test_chunk.cpp:22:
In member function ‘void Kratos::Chunk::Initialize()’,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_ChunkInitializeSmallBlock_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/sources/test_chunk.cpp:48:30:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/chunk.h:106:27: warning: array subscript 0 is outside array bounds of ‘void [0]’ [-Warray-bounds]
  106 |                   *mpData = 0; // The first entry of the link list to the next one
      |                   ~~~~~~~~^~~
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/chunk.h:99:51: note: object of size 0 allocated by ‘operator new []’
   99 |                   mpData = new BlockType[data_size];
      |                                                   ^
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/data_communicator.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/testing/testing.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:18:
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
In file included from /usr/include/boost/numeric/ublas/vector.hpp:21,
                 from /usr/include/boost/numeric/ublas/matrix.hpp:18,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/includes/ublas_interface.h:24,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:28:
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::vector<T, A>::vector(size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/vector.hpp:86:10,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:699:28:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseVector_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘*(const Kratos::array_1d<int, 4>*)((char*)&<unnamed> + offsetof(Kratos::value_type, Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::<unnamed>.boost::numeric::ublas::vector_expression<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >::<unnamed>)).Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[1].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[2].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[3].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = int; long unsigned int N = 4]’,
    inlined from ‘std::array<Kratos::array_1d<int, 4>, 5>::array(const std::array<Kratos::array_1d<int, 4>, 5>&)’ at /usr/include/c++/12/array:99:12,
    inlined from ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = Kratos::array_1d<int, 4>; long unsigned int N = 5]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9,
    inlined from ‘void std::__new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; _Args = {Kratos::array_1d<Kratos::array_1d<int, 4>, 5>}; _Tp = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>]’ at /usr/include/c++/12/bits/new_allocator.h:175:4,
    inlined from ‘boost::numeric::ublas::unbounded_array<T, ALLOC>::unbounded_array(size_type, const ALLOC&) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; ALLOC = std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> >]’ at /usr/include/boost/numeric/ublas/storage.hpp:79:39,
    inlined from ‘boost::numeric::ublas::matrix<T, L, A>::matrix(size_type, size_type) [with T = Kratos::array_1d<Kratos::array_1d<int, 4>, 5>; L = boost::numeric::ublas::basic_row_major<>; A = boost::numeric::ublas::unbounded_array<Kratos::array_1d<Kratos::array_1d<int, 4>, 5>, std::allocator<Kratos::array_1d<Kratos::array_1d<int, 4>, 5> > >]’ at /usr/include/boost/numeric/ublas/matrix.hpp:133:42,
    inlined from ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_data_type_traits.cpp:754:31:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘<unnamed>.Kratos::array_1d<Kratos::array_1d<int, 4>, 5>::data_.std::array<Kratos::array_1d<int, 4>, 5>::_M_elems[4].Kratos::array_1d<int, 4>::data_’ is used uninitialized [-Wuninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
/usr/include/boost/numeric/ublas/storage.hpp: In member function ‘virtual void Kratos::Testing::KratosCoreFastSuite_DataTypeTraitsNestedDenseMatrix_Test::TestBody()’:
/usr/include/boost/numeric/ublas/storage.hpp:79:43: note: ‘<anonymous>’ declared here
   79 |                       alloc_.construct(d, value_type());
      |                                           ^~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/point.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/integration/integration_point.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry_data.h:23,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/geometry.h:28,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/line_2d_2.h:25,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_intersection_utilities.cpp:16:
In copy constructor ‘Kratos::array_1d<T, N>::array_1d(const Kratos::array_1d<T, N>&) [with T = double; long unsigned int N = 3]’,
    inlined from ‘static int Kratos::IntersectionUtilities::ComputeTriangleLineIntersectionInTheSamePlane(const TGeometryType&, const TCoordinatesType&, const TCoordinatesType&, TCoordinatesType&, TCoordinatesType&, int&, double) [with TGeometryType = Kratos::Geometry<Kratos::Point>; TCoordinatesType = Kratos::array_1d<double, 3>]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/intersection_utilities.h:288:33,
    inlined from ‘static int Kratos::IntersectionUtilities::ComputeTetrahedraLineIntersection(const TGeometryType&, const TCoordinatesType&, const TCoordinatesType&, TCoordinatesType&, TCoordinatesType&, double) [with TGeometryType = Kratos::Tetrahedra3D4<Kratos::Point>; TCoordinatesType = Kratos::array_1d<double, 3>; bool TConsiderInsidePoints = true]’ at /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/intersection_utilities.h:439:62:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/containers/array_1d.h:134:9: warning: ‘intersection_point_2.Kratos::array_1d<double, 3>::data_’ may be used uninitialized [-Wmaybe-uninitialized]
  134 |         data_ (v.data_) {}
      |         ^~~~~~~~~~~~~~~
In file included from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/geometries/line_3d_2.h:27,
                 from /home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/tests/cpp_tests/utilities/test_intersection_utilities.cpp:17:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/intersection_utilities.h: In function ‘static int Kratos::IntersectionUtilities::ComputeTetrahedraLineIntersection(const TGeometryType&, const TCoordinatesType&, const TCoordinatesType&, TCoordinatesType&, TCoordinatesType&, double) [with TGeometryType = Kratos::Tetrahedra3D4<Kratos::Point>; TCoordinatesType = Kratos::array_1d<double, 3>; bool TConsiderInsidePoints = true]’:
/home/whf/KratosDev/Kratos-Release/Kratos-10.1/kratos/utilities/intersection_utilities.h:284:55: note: ‘intersection_point_2’ declared here
  284 |             array_1d<double, 3> intersection_point_1, intersection_point_2;
      |                                                       ^~~~~~~~~~~~~~~~~~~~
gmake: *** [Makefile:146：all] 错误 2
