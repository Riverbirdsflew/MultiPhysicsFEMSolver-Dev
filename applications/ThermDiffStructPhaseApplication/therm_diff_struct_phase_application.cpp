//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    @{KRATOS_APP_AUTHOR}
//


// System includes


// External includes


// Project includes
#include "therm_diff_struct_phase_application.h"
#include "therm_diff_struct_phase_application_variables.h"
#include "custom_utilities/phase_trans_registration_utilities.h"


namespace Kratos {

KratosThermDiffStructPhaseApplication::KratosThermDiffStructPhaseApplication():
    KratosApplication("ThermDiffStructPhaseApplication"),
    mCreepModel(),
    mKineticsModel(),
    mPartitionModel(),
    mTripModel()
    {
        for (auto component : {"kinetics_models", "partition_models", "trip_models", "creep_models"}) {
            if (!Registry::HasItem(std::string(component))) {
                Registry::AddItem<RegistryItem>(std::string(component)+"."+mApplicationName);
            }
        }
    }

void KratosThermDiffStructPhaseApplication::Register()
{


    KRATOS_INFO("") << "Initializing KratosThermDiffStructPhaseApplication..." << std::endl;
    
    // Register PhaseTransformationLaw BaseClass
    RegisterCreepModel("CreepModel", mCreepModel);
    RegisterKineticsModel("KineticsModel", mKineticsModel);
    RegisterTripModel("TripModel", mTripModel);
    RegisterPartitionModel("PartitionModel", mPartitionModel);

    /* additional strains of multi-phase material */
    /* equivalent strain and strain vector induced by all phase transformations */
    KRATOS_REGISTER_VARIABLE( STRAIN_TRANSFORMATION )

    /* equivalent strain and strain vector induced by trip */
    KRATOS_REGISTER_VARIABLE( EQUIVALENT_STRAIN_TRIP )
    KRATOS_REGISTER_VARIABLE( STRAIN_TRIP )

    /* equivalent strain and strain vector induced by creep */
    KRATOS_REGISTER_VARIABLE( EQUIVALENT_STRAIN_CREEP )
    KRATOS_REGISTER_VARIABLE( STRAIN_CREEP )

    /* mechanical stress and strain vector? */
    KRATOS_REGISTER_VARIABLE( EQUIVALENT_STRESS )
    KRATOS_REGISTER_VARIABLE( VON_MISES_STRESS )
    KRATOS_REGISTER_VARIABLE( EQUIVALENT_STRAIN_PLASTICITY )

    /* properties of multi-phase material */
    /* mass fraction of common microstructures */
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_FERRITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_PEARLITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( MASS_FRACTION_MARTENSITE )

    /* mean carbon content. carbon content of common microstructures */
    KRATOS_REGISTER_VARIABLE( MEAN_CARBON_CONTENT )
    KRATOS_REGISTER_VARIABLE( CARBON_CONTENT_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( CARBON_CONTENT_PEARLITE )
    KRATOS_REGISTER_VARIABLE( CARBON_CONTENT_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( CARBON_CONTENT_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( CARBON_CONTENT_MARTENSITE )

    /* density of common microstructures */
    KRATOS_REGISTER_VARIABLE( DENSITY_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_FERRITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_PEARLITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( DENSITY_MARTENSITE )

    /* thermal conductivity of common microstructures */
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_FERRITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_PEARLITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( CONDUCTIVITY_MARTENSITE )

    /* thermal specific heat of common microstructures */
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_FERRITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_PEARLITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( SPECIFIC_HEAT_MARTENSITE )

    /* diffusive conductivity of common microstructures */
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY)
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_FERRITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_PEARLITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( DIFFUSE_CONDUCTIVITY_MARTENSITE )

    /* elasticity modulus of common microstructures */
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS)
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_FERRITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_PEARLITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( ELASTICITY_MODULUS_MARTENSITE )

    /* poisson ratio of common microstructures */
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_FERRITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_PEARLITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( POISSON_RATIO_MARTENSITE )

    /* thermal expansion coefficient of common microstructures */
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_FERRITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_PEARLITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( THERMAL_EXPANSION_COEFFICIENT_MARTENSITE )

    /* yield strength of common microstructures */
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_AUSTENITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_FERRITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_CEMENTITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_PEARLITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_UPPER_BAINITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_LOWER_BAINITE )
    KRATOS_REGISTER_VARIABLE( YIELD_STRENGTH_MARTENSITE )

    /* creep model parameters of common microstructures */
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_AUSTENITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_AUSTENITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_AUSTENITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_AUSTENITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_AUSTENITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_FERRITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_FERRITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_FERRITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_FERRITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_FERRITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_CEMENTITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_CEMENTITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_CEMENTITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_CEMENTITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_CEMENTITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_PEARLITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_PEARLITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_PEARLITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_PEARLITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_PEARLITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_UPPER_BAINITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_UPPER_BAINITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_UPPER_BAINITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_UPPER_BAINITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_UPPER_BAINITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_LOWER_BAINITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_LOWER_BAINITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_LOWER_BAINITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_LOWER_BAINITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_LOWER_BAINITE_5 )

    KRATOS_REGISTER_VARIABLE( CREEP_PARA_MARTENSITE_1 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_MARTENSITE_2 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_MARTENSITE_3 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_MARTENSITE_4 )
    KRATOS_REGISTER_VARIABLE( CREEP_PARA_MARTENSITE_5 )

    /* properties of common phase transformations */
    /* incubation fraction of common phase transformations */
    KRATOS_REGISTER_VARIABLE( INCUBATION_FRACTION_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( INCUBATION_FRACTION_EUTECTOID_DECOMPOSITION )
    KRATOS_REGISTER_VARIABLE( INCUBATION_FRACTION_BAINITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( INCUBATION_FRACTION_MARTENSITIC_TRANSFORMATION )

    /* latent of common phase transformations */
    KRATOS_REGISTER_VARIABLE( LATENT_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( LATENT_EUTECTOID_DECOMPOSITION )
    KRATOS_REGISTER_VARIABLE( LATENT_BAINITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( LATENT_MARTENSITIC_TRANSFORMATION )

    /* critical temperature of common phase transformations */
    KRATOS_REGISTER_VARIABLE( MAX_TEMPERATURE_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( MIN_TEMPERATURE_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( MAX_TEMPERATURE_EUTECTOID_DECOMPOSITION  )
    KRATOS_REGISTER_VARIABLE( MIN_TEMPERATURE_EUTECTOID_DECOMPOSITION  )
    KRATOS_REGISTER_VARIABLE( MAX_TEMPERATURE_BAINITIC_TRANSFORMATION  )
    KRATOS_REGISTER_VARIABLE( MIN_TEMPERATURE_BAINITIC_TRANSFORMATION  )
    KRATOS_REGISTER_VARIABLE( MAX_TEMPERATURE_MARTENSITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( MIN_TEMPERATURE_MARTENSITIC_TRANSFORMATION )

    /* max fraction of common phase transformations */
    KRATOS_REGISTER_VARIABLE( MAX_FRACTION_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( MAX_FRACTION_EUTECTOID_DECOMPOSITION )
    KRATOS_REGISTER_VARIABLE( MAX_FRACTION_BAINITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( MAX_FRACTION_MARTENSITIC_TRANSFORMATION )

    /* transformation strain of common phase transformations */
    KRATOS_REGISTER_VARIABLE( STRAIN_TRANSFORMATION_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( STRAIN_TRANSFORMATION_EUTECTOID_DECOMPOSITION )
    KRATOS_REGISTER_VARIABLE( STRAIN_TRANSFORMATION_BAINITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( STRAIN_TRANSFORMATION_MARTENSITIC_TRANSFORMATION )

    /* kinetics parameters of common phase transformations */
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_1 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_2 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_3 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_4 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_5 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_6 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_7 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_8 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_9 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_10 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_11 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_AUSTENIZATION_12 )

    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_1 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_2 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_3 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_4 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_5 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_6 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_7 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_8 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_9 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_10 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_11 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_EUTECTOID_DECOMPOSITION_12 )

    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_1 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_2 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_3 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_4 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_5 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_6 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_7 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_8 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_9 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_10 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_11 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_BAINITIC_TRANSFORMATION_12 )

    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_1 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_2 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_3 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_4 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_5 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_6 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_7 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_8 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_9 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_10 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_11 )
    KRATOS_REGISTER_VARIABLE( KINETICS_PARA_MARTENSITIC_TRANSFORMATION_12 )


    /* partition parameters of common phase transformations */
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_EUTECTOID_DECOMPOSITION_1 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_EUTECTOID_DECOMPOSITION_2 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_EUTECTOID_DECOMPOSITION_3 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_EUTECTOID_DECOMPOSITION_4 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_EUTECTOID_DECOMPOSITION_5 )

    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_BAINITIC_TRANSFORMATION_1 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_BAINITIC_TRANSFORMATION_2 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_BAINITIC_TRANSFORMATION_3 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_BAINITIC_TRANSFORMATION_4 )
    KRATOS_REGISTER_VARIABLE( PARTITION_PARA_BAINITIC_TRANSFORMATION_5 )

    /* trip model parameters of common phase transformations */
    KRATOS_REGISTER_VARIABLE( TRIP_PARA_AUSTENIZATION_1 )
    KRATOS_REGISTER_VARIABLE( TRIP_PARA_AUSTENIZATION_2 )

    KRATOS_REGISTER_VARIABLE( TRIP_PARA_EUTECTOID_DECOMPOSITION_1 )
    KRATOS_REGISTER_VARIABLE( TRIP_PARA_EUTECTOID_DECOMPOSITION_2 )

    KRATOS_REGISTER_VARIABLE( TRIP_PARA_BAINITIC_TRANSFORMATION_1 )
    KRATOS_REGISTER_VARIABLE( TRIP_PARA_BAINITIC_TRANSFORMATION_2 )

    KRATOS_REGISTER_VARIABLE( TRIP_PARA_MARTENSITIC_TRANSFORMATION_1 )
    KRATOS_REGISTER_VARIABLE( TRIP_PARA_MARTENSITIC_TRANSFORMATION_2 )

    /* control flags for multi-physics */
    KRATOS_REGISTER_VARIABLE( IS_MULTIPHASE )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_THERMO )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_DIFFUSE )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_STRUCTURE )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_LATENT )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_STRAIN_THERMO )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_STRIAN_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_STRIAN_CREEP )
    KRATOS_REGISTER_VARIABLE( IS_CALCULATE_STRIAN_TRIP )

    //pointer to phase trans model
    KRATOS_REGISTER_VARIABLE( KINETICS_AUSTENIZATION)
    KRATOS_REGISTER_VARIABLE( KINETICS_EUTECTOID_DECOMPOSITION)
    KRATOS_REGISTER_VARIABLE( KINETICS_BAINITIC_TRANSFORMATION)
    KRATOS_REGISTER_VARIABLE( KINETICS_MARTENSITIC_TRANSFORMATION)

    KRATOS_REGISTER_VARIABLE( PARTITION_EUTECTOID_DECOMPOSITION)
    KRATOS_REGISTER_VARIABLE( PARTITION_BAINITIC_TRANSFORMATION)

    KRATOS_REGISTER_VARIABLE(TRIP_AUSTENIZATION)
    KRATOS_REGISTER_VARIABLE( TRIP_EUTECTOID_DECOMPOSITION)
    KRATOS_REGISTER_VARIABLE( TRIP_BAINITIC_TRANSFORMATION)
    KRATOS_REGISTER_VARIABLE( TRIP_MARTENSITIC_TRANSFORMATION)

    //pointer to creep model
    KRATOS_REGISTER_VARIABLE( CREEP_AUSTENITE)
    KRATOS_REGISTER_VARIABLE( CREEP_FERRITE)
    KRATOS_REGISTER_VARIABLE( CREEP_CEMENTITE)
    KRATOS_REGISTER_VARIABLE( CREEP_PEARLITE)
    KRATOS_REGISTER_VARIABLE( CREEP_UPPER_BAINITE)
    KRATOS_REGISTER_VARIABLE( CREEP_LOWER_BAINITE)
    KRATOS_REGISTER_VARIABLE( CREEP_MARTENSITE)

    //pointer to phase transformation law
    KRATOS_REGISTER_VARIABLE( PHASE_TRANSFORMATION_LAW_AUSTENIZATION )
    KRATOS_REGISTER_VARIABLE( PHASE_TRANSFORMATION_LAW_EUTECTOID_DECOMPOSITION )
    KRATOS_REGISTER_VARIABLE( PHASE_TRANSFORMATION_LAW_BAINITIC_TRANSFORMATION )
    KRATOS_REGISTER_VARIABLE( PHASE_TRANSFORMATION_LAW_MARTENSITIC_TRANSFORMATION )

    //pointer to phase
    KRATOS_REGISTER_VARIABLE( PHASE_AUSTENITE)
    KRATOS_REGISTER_VARIABLE( PHASE_FERRITE)
    KRATOS_REGISTER_VARIABLE( PHASE_CEMENTITE)
    KRATOS_REGISTER_VARIABLE( PHASE_PEARLITE)
    KRATOS_REGISTER_VARIABLE( PHASE_UPPER_BAINITE)
    KRATOS_REGISTER_VARIABLE( PHASE_LOWER_BAINITE)
    KRATOS_REGISTER_VARIABLE( PHASE_MARTENSITE)

}

void KratosThermDiffStructPhaseApplication::DeregisterApplication() {
    KRATOS_INFO("") << "Deregistering components from " << mApplicationName << std::endl;
    
    // 注销相变的模型组件
    DeregisterComponent<KineticsModel>("kinetics_models");
    DeregisterComponent<TripModel>("trip_models");
    DeregisterComponent<PartitionModel>("partition_models");
    DeregisterComponent<CreepModel>("creep_models");
    
}

}  // namespace Kratos.
